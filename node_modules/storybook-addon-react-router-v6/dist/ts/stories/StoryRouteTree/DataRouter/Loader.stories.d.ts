/// <reference types="react" />
declare const _default: {
    decorators: ((...args: any) => any)[];
};
export default _default;
export declare const RouteLoader: {
    render: () => JSX.Element;
    parameters: {
        reactRouter: {
            loader: () => Promise<{
                foo: unknown;
            }>;
        };
    };
};
export declare const RouteAndOutletLoader: {
    render: () => JSX.Element;
    parameters: {
        reactRouter: {
            loader: () => Promise<{
                foo: unknown;
            }>;
            outlet: {
                element: JSX.Element;
                loader: () => Promise<{
                    foo: unknown;
                }>;
            };
        };
    };
};
export declare const RouteShouldNotRevalidate: {
    render: () => JSX.Element;
    parameters: {
        reactRouter: {
            loader: () => Promise<{
                foo: unknown;
            }>;
            shouldRevalidate: () => boolean;
        };
    };
};
declare function failingLoader(): Promise<void>;
export declare const ErrorBoundary: {
    render: () => JSX.Element;
    parameters: {
        reactRouter: {
            loader: typeof failingLoader;
            errorElement: JSX.Element;
        };
    };
};
